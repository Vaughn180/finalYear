#define DIGITALINPUT 1
#define PULLDOWN 1
#define RISING 1
#define LORAMAC_JOIN_BY_REQUEST 1
#define EVENTPORT 2 // port sending events down
#define CONFIRMATION 1
#define NO_CONFIRMATION  0
#define RECURRINGTIMER 1
#define I2C_CLOCK_HZ 100000
#define CFG_FLAGS 0
#define RTC_ADDRESS 0x68
#define SEC_ADDR 0
#define MIN_ADDR 1
#define HOUR_ADDR 2
#define DAY_ADDR 4
#define MONTH_ADDR 5
#define YEAR_ADDR 6


dim COUNTER
dim HANDLE
dim packets[25] 



function pirHandler()   
 COUNTER = COUNTER +1 
 print "\n"
 print COUNTER
    
endfunc 1
// converts binary coded decimal to regular value (decimal)
function BCD_2_DEC(x)
    
endfunc (x/16) *10 + (x%16)  

// prepare the date before it sends it across
// first 2 bytes im sending is the count
// the 6 bytes are date and type broken up into individual bytes.
function PrepareData$() 
    dim data$ , RC, temp , index
    RC= STRSETCHR(data$,COUNTER/256,0) // tens of count
    RC= STRSETCHR(data$,COUNTER%256,1) // units of count
    RC= I2CREADREG8(RTC_ADDRESS,SEC_ADDR, temp) // seconds on Tiny RTC
    RC= STRSETCHR(data$, BCD_2_DEC(temp),2)
    RC= I2CREADREG8(RTC_ADDRESS,MIN_ADDR, temp) // minutes on Tiny RTC
    RC= STRSETCHR(data$, BCD_2_DEC(temp),3)
    RC= I2CREADREG8(RTC_ADDRESS,HOUR_ADDR, temp) // hours on Tiny RTC
    RC= STRSETCHR(data$, BCD_2_DEC(temp),4)
    RC= I2CREADREG8(RTC_ADDRESS,DAY_ADDR, temp) // day on Tiny RTC
    RC= STRSETCHR(data$, BCD_2_DEC(temp),5)
    RC= I2CREADREG8(RTC_ADDRESS,MONTH_ADDR, temp) //month on Tiny RTC
    RC= STRSETCHR(data$, BCD_2_DEC(temp),6)
    RC= I2CREADREG8(RTC_ADDRESS,YEAR_ADDR, temp) // year on Tiny RTC
    RC= STRSETCHR(data$, BCD_2_DEC(temp),7) 
     
    // index = 5
    // for 
    

endfunc data$

// sends data across the lora network in a string packet.
function DataSend()
    dim RC, data$ 
    data$ = PrepareData$()
    RC = LORAMACTxData(EVENTPORT, data$ ,CONFIRMATION)
    print "Hello world\n"
        
endfunc 1

// function addData()
// packets = packets + data$      

// endfunc 1

function randomSelect()

endfunc 1


function LoramacJoining() As Integer
    print "\nJoining"
endfunc 1

function LoramacJoined() As Integer
    print "\nJoined"
//pinsetup -  this sets up GPIO pin., 6- the SIO pin is connected to the output of PIR.  
// Middle ,specifies the DIGITALINPUT. as we are using PIR sensor.
    // PullDOWN is a sub function for the  pull down resistor which dictates the direction of the prefered value.
    dim RC 
    RC = GPIOSETFUNC(6, DIGITALINPUT, PULLDOWN)
    //binding the pin 6 to eventGPIOchans 0,  0- is the hardware channel - which monitors for pin changes
    // rising - is the polarity so what interrupts its looking for.
    RC = GPIOBINDEVENT(0, 6 ,RISING)
endfunc 1


//Setup event handlers
onevent EVTMR0 call DataSend
// when the event occurs call out pirHandler fucntion
onevent EVGPIOCHAN0 call pirHandler
//event handler for lora
ONEVENT EVLORAMACJOINING CALL LoramacJoining
ONEVENT EVLORAMACJOINED CALL LoramacJoined

// dim stands for dimension RC is the variable being used to store the return code for both functions
dim RC
//Start the recurring timer
TIMERSTART(0, 10000, RECURRINGTIMER)
RC = I2COPEN(I2C_CLOCK_HZ, CFG_FLAGS, HANDLE )

print "\nStarting"

//setup for lora
RC = LORAMACJOIN(LORAMAC_JOIN_BY_REQUEST)
//Wait for an event to occur
WAITEVENT


