[{"id":"be6534b1.92ee88","type":"tab","label":"Walking Zebra ","disabled":false,"info":""},{"id":"b1ad4a0f.f96fd8","type":"influxdb out","z":"be6534b1.92ee88","influxdb":"15e1c939.350407","name":"Store to Influx","measurement":"countppl","precision":"","retentionPolicy":"","x":1040,"y":220,"wires":[]},{"id":"3d8a3652.0ce78a","type":"comment","z":"be6534b1.92ee88","name":"Processing","info":"","x":80,"y":60,"wires":[]},{"id":"2f250d4f.2e8e32","type":"function","z":"be6534b1.92ee88","name":"Parsing Sensor data ","func":"var sen = msg.dev_id;\nvar data = msg.payload;\n\n//rfc only keeps last 2 numbers of the year so I add 2000 to get a whole year \nvar year = data[7] + 2000;\n//the system starts the date index from 0 so I take 1 away \n//so it is not the month ahead \nvar month = data[6] -1;\nvar day = data[5];\nvar hour = data[4];\nvar minute = data[3];\nvar seconds = data[2];\n\n\nreturn {\n    year: year ,\n    month: month ,\n    day: day ,\n    hour: hour ,\n    minute: minute,\n    seconds: seconds,\n    sensor: sen,\n    count: data[0]*256 + data[1]\n};","outputs":1,"noerr":0,"x":380,"y":220,"wires":[["76315b82.5589b4"]]},{"id":"83cef033.10aeb","type":"e-mail","z":"be6534b1.92ee88","server":"smtp.gmail.com","port":"465","secure":true,"tls":true,"name":"vs287@kent.ac.uk","dname":"","x":1030,"y":140,"wires":[]},{"id":"571c6731.f6b138","type":"mqtt in","z":"be6534b1.92ee88","name":"","topic":"+/devices/+/up","qos":"2","datatype":"auto","broker":"4eeed4e1.19646c","x":160,"y":140,"wires":[["2bc8532d.7c491c"]]},{"id":"dbc53454.44d688","type":"base64","z":"be6534b1.92ee88","name":"Decode Payload","action":"","property":"payload","x":160,"y":220,"wires":[["2f250d4f.2e8e32"]]},{"id":"2bc8532d.7c491c","type":"function","z":"be6534b1.92ee88","name":"Parse JSON","func":"var parsed = JSON.parse(msg.payload);\nparsed.payload = parsed.payload_raw;\nreturn parsed;","outputs":1,"noerr":0,"x":470,"y":140,"wires":[["dbc53454.44d688"]]},{"id":"89bb4fe2.5321f","type":"function","z":"be6534b1.92ee88","name":"Send email","func":"\nmsg = {\n    payload: \"The timer has stopped working! This email was sent at \" +Date().toString(),\n    topic: \"Sensor Issue\",\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":810,"y":140,"wires":[["83cef033.10aeb"]]},{"id":"76315b82.5589b4","type":"switch","z":"be6534b1.92ee88","name":"Valid Date Check","property":"year","propertyType":"msg","rules":[{"t":"lt","v":"2020","vt":"str"},{"t":"gte","v":"2020","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":590,"y":220,"wires":[["89bb4fe2.5321f"],["a55a1915.fc4d08"]]},{"id":"a55a1915.fc4d08","type":"function","z":"be6534b1.92ee88","name":"Preparing DB Data ","func":"\nmsg.payload = {\n    time: new Date(msg.year, msg.month, msg.day, msg.hour, msg.minute, msg.seconds, 0),\n    sensor_id: msg.sensor,\n    pplCount: msg.count\n}\nreturn msg;","outputs":1,"noerr":0,"x":830,"y":220,"wires":[["b1ad4a0f.f96fd8"]]},{"id":"15e1c939.350407","type":"influxdb","z":"","hostname":"127.0.0.1","port":"8086","protocol":"http","database":"countingpeople","name":"test1","usetls":false,"tls":""},{"id":"4eeed4e1.19646c","type":"mqtt-broker","z":"be6534b1.92ee88","name":"","broker":"eu.thethings.network","port":"1883","clientid":"","usetls":false,"verifyservercert":true,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthRetain":null,"birthPayload":"","closeTopic":"","closePayload":"","willTopic":"","willQos":"0","willRetain":null,"willPayload":""}]